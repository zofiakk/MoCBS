#Oli
oli.de.list<- list( "Oli_3/3_up" = de33_markers$gene[de33_markers$cell_type == "Oli"& de33_markers$dir == "pos"],
"Oli_3/4_up" = de34_markers$gene[de34_markers$cell_type == "Oli"& de34_markers$dir == "pos"],
"Oli_3/3_down" = de33_markers$gene[de33_markers$cell_type == "Oli"& de33_markers$dir != "pos"],
"Oli_3/4_down" = de34_markers$gene[de34_markers$cell_type == "Oli"& de34_markers$dir != "pos"])
upset(fromList(oli.de.list),sets = c("Oli_3/4_down","Oli_3/4_up","Oli_3/3_down","Oli_3/3_up"), keep.order = TRUE, order.by = "freq",  mainbar.y.label = "Gene Intersections", sets.x.label = "Number of DEGs", text.scale = c(2.25, 2.25, 1.9, 2.25, 2.25, 2.25))
grid.text("Oligodendrocytes",x = 0.67, y=0.98, gp=gpar(fontsize=20))
#Opc
opc.de.list<- list( "Opc_3/3_up" = de33_markers$gene[de33_markers$cell_type == "Opc"& de33_markers$dir == "pos"],
"Opc_3/4_up" = de34_markers$gene[de34_markers$cell_type == "Opc"& de34_markers$dir == "pos"],
"Opc_3/3_down" = de33_markers$gene[de33_markers$cell_type == "Opc"& de33_markers$dir != "pos"],
"Opc_3/4_down" = de34_markers$gene[de34_markers$cell_type == "Opc"& de34_markers$dir != "pos"])
upset(fromList(opc.de.list), sets = c("Opc_3/4_down","Opc_3/4_up","Opc_3/3_down","Opc_3/3_up"), keep.order = TRUE,order.by = "freq",  mainbar.y.label = "Gene Intersections", sets.x.label = "Number of DEGs",  text.scale = c(2.25, 2.25, 1.9, 2.25, 2.25, 2.25))
grid.text("Oligodendrocyte progenitor cells",x = 0.72, y=0.98, gp=gpar(fontsize=18))
de33.list1<-list( Ast= de33_markers$gene[de33_markers$cell_type == "Ast"],
Mic= de33_markers$gene[de33_markers$cell_type == "Mic"],
Neu= de33_markers$gene[de33_markers$cell_type == "Neu"],
Oli= de33_markers$gene[de33_markers$cell_type == "Oli"],
Opc= de33_markers$gene[de33_markers$cell_type == "Opc"])
de33.list2<-list(Ast_up = de33_markers$gene[de33_markers$cell_type == "Ast" & de33_markers$dir == "pos"],
Mic_up = de33_markers$gene[de33_markers$cell_type == "Mic" & de33_markers$dir == "pos"],
Neu_up = de33_markers$gene[de33_markers$cell_type == "Neu" & de33_markers$dir == "pos"],
Oli_up = de33_markers$gene[de33_markers$cell_type == "Oli" & de33_markers$dir == "pos"],
Opc_up = de33_markers$gene[de33_markers$cell_type == "Opc" & de33_markers$dir == "pos"])
de33.list3<-list(Ast_down =  de33_markers$gene[de33_markers$cell_type == "Ast" & de33_markers$dir != "pos"],
Mic_down =   de33_markers$gene[de33_markers$cell_type == "Mic" & de33_markers$dir != "pos"],
Neu_down = de33_markers$gene[de33_markers$cell_type == "Neu" & de33_markers$dir != "pos"],
Oli_down =  de33_markers$gene[de33_markers$cell_type == "Oli" & de33_markers$dir != "pos"],
Opc_down =  de33_markers$gene[de33_markers$cell_type == "Opc" & de33_markers$dir != "pos"])
#c(intersection size title, intersection size tick labels, set size title, set size tick labels, set names, numbers above bars).
upset(fromList(de33.list1), sets = c("Opc","Oli", "Neu", "Mic", "Ast" ), keep.order = TRUE,order.by = "freq",  mainbar.y.label = "Gene Intersections", nsets=6,sets.x.label = "Number of DEGs", text.scale = c(2.25, 2.25, 1.9, 2.25, 2.25, 2.25))
grid.text("Shared and unique AD vs non-AD DEGs across APOE3/3 cell types",x = 0.69, y=0.967, gp=gpar(fontsize=14))
upset(fromList(de33.list2), sets = c("Opc_up","Oli_up", "Neu_up", "Mic_up", "Ast_up" ), keep.order = TRUE, order.by = "freq",  mainbar.y.label = "Gene Intersections", sets.x.label = "Number of DEGs", text.scale = c(2.25, 2.25, 1.9, 2.25, 2.25, 2.25))
grid.text("Shared and unique upregulated AD vs non-AD DEGs across APOE3/3 cell types",x = 0.69, y=0.98, gp=gpar(fontsize=14))
upset(fromList(de33.list3), sets = c("Opc_down","Oli_down", "Neu_down", "Mic_down", "Ast_down" ), keep.order = TRUE, order.by = "freq",  mainbar.y.label = "Gene Intersections", sets.x.label = "Number of DEGs", text.scale = c(2.25, 2.25, 1.9, 2.25, 2.25, 2.25))
grid.text("Shared and unique downregulated AD vs non-AD DEGs across APOE3/3 cell types",x = 0.7, y=0.98, gp=gpar(fontsize=13))
de34.list1<-list(Mic = de34_markers$gene[de34_markers$cell_type == "Mic"],
Ast= de34_markers$gene[de34_markers$cell_type == "Ast"],
Neu = de34_markers$gene[de34_markers$cell_type == "Neu"],
Oli = de34_markers$gene[de34_markers$cell_type == "Oli"],
Opc = de34_markers$gene[de34_markers$cell_type == "Opc"])
de34.list2<-list(Mic_up =  de34_markers$gene[de34_markers$cell_type == "Mic" & de34_markers$dir == "pos"],
Ast_up =  de34_markers$gene[de34_markers$cell_type == "Ast" & de34_markers$dir == "pos"],
Neu_up = de34_markers$gene[de34_markers$cell_type == "Neu" & de34_markers$dir == "pos"],
Oli_up = de34_markers$gene[de34_markers$cell_type == "Oli" & de34_markers$dir == "pos"],
Opc_up = de34_markers$gene[de34_markers$cell_type == "Opc" & de34_markers$dir == "pos"])
de34.list3<-list( Mic_down = de34_markers$gene[de34_markers$cell_type == "Mic" & de34_markers$dir != "pos"],
Ast_down = de34_markers$gene[de34_markers$cell_type == "Ast" & de34_markers$dir != "pos"],
Neu_down = de34_markers$gene[de34_markers$cell_type == "Neu" & de34_markers$dir != "pos"],
Oli_down = de34_markers$gene[de34_markers$cell_type == "Oli" & de34_markers$dir != "pos"],
Opc_down = de34_markers$gene[de34_markers$cell_type == "Opc" & de34_markers$dir != "pos"])
upset(fromList(de34.list1), sets = c("Opc","Oli", "Neu", "Mic", "Ast" ), keep.order = TRUE, order.by = "freq",  mainbar.y.label = "Gene Intersections", nsets=6,sets.x.label = "Number of DEGs", text.scale = c(2.25, 2.25, 1.9, 2.25, 2.25, 1.9))
grid.text("Shared and unique AD vs non-AD DEGs across APOE3/4 cell types",x = 0.69, y=0.967, gp=gpar(fontsize=15))
upset(fromList(de34.list2), sets = c("Opc_up","Oli_up", "Neu_up", "Mic_up", "Ast_up" ), keep.order = TRUE, order.by = "freq",  mainbar.y.label = "Gene Intersections", nsets=6, sets.x.label = "Number of DEGs", text.scale = c(2.25, 2.25, 1.9, 2.25, 2.25, 2.25))
grid.text("Shared and unique upregulated AD vs non-AD DEGs across APOE3/4 cell types",x = 0.69, y=0.967, gp=gpar(fontsize=14))
upset(fromList(de34.list3),  sets = c("Opc_down","Oli_down", "Neu_down", "Mic_down", "Ast_down" ), keep.order = TRUE, order.by = "freq",  mainbar.y.label = "Gene Intersections", nsets=6,sets.x.label = "Number of DEGs", text.scale = c(2.25, 2.25, 1.9, 2.25, 2.25, 1.9))
grid.text("Shared and unique downregulated AD vs non-AD DEGs across APOE3/4 cell types",x = 0.70, y=0.97, gp=gpar(fontsize=13))
#Ast
ast.de.list<- list( "Ast_3/3" = de33.markers$gene[de33.markers$cell_type == "Ast"],
"Ast_3/4" = de34.markers$gene[de34.markers$cell_type == "Ast"] )
#Ast
ast.de.list<- list( "Ast_3/3" = de33_markers$gene[de33_markers$cell_type == "Ast"],
"Ast_3/4" = de34_markers$gene[de34_markers$cell_type == "Ast"] )
upset(fromList(ast.de.list),  sets = c("Ast_3/4","Ast_3/3"), keep.order = TRUE, order.by = "freq",  mainbar.y.label = "Gene Intersections", sets.x.label = "Number of DEGs", text.scale = c(2.25, 2.25, 1.9, 1.9, 2.25, 2))
grid.text("Astrocytes",x = 0.67, y=0.98, gp=gpar(fontsize=20))
#Mic
mic.de.list<- list( "Mic_3/3" = de33_markers$gene[de33_markers$cell_type == "Mic"],
"Mic_3/4" = de34_markers$gene[de34_markers$cell_type == "Mic"] )
upset(fromList(mic.de.list), sets = c("Mic_3/4","Mic_3/3"), keep.order = TRUE,order.by = "freq",  mainbar.y.label = "Gene Intersections", sets.x.label ="Number of DEGs",  text.scale = c(2.25, 2.25, 1.9, 1.9, 2.25, 2))
grid.text("Microglia",x = 0.67, y=0.98, gp=gpar(fontsize=20))
#Neu
neu.de.list<- list( "Neu_3/3" = de33_markers$gene[de33_markers$cell_type == "Neu"],
"Neu_3/4" = de34_markers$gene[de34_markers$cell_type == "Neu"] )
upset(fromList(neu.de.list),sets = c("Neu_3/4","Neu_3/3"), keep.order = TRUE, order.by = "freq",  mainbar.y.label = "Gene Intersections", sets.x.label = "Number of DEGs", text.scale = c(2.25, 2.25, 1.9, 1.9, 2.25, 2))
grid.text("Neurons",x = 0.67, y=0.98, gp=gpar(fontsize=20))
#Oli
oli.de.list<- list( "Oli_3/3" = de33_markers$gene[de33_markers$cell_type == "Oli"],
"Oli_3/4" = de34_markers$gene[de34_markers$cell_type == "Oli"] )
upset(fromList(oli.de.list), sets = c("Oli_3/4","Oli_3/3"), keep.order = TRUE, order.by = "freq",  mainbar.y.label = "Gene Intersections", sets.x.label = "Number of DEGs", text.scale = c(2.25, 2.25, 1.9, 1.9, 2.25, 2.25))
grid.text("Oligodendrocytes",x = 0.67, y=0.98, gp=gpar(fontsize=20))
#Opc
opc.de.list<- list( "Opc_3/3" = de33_markers$gene[de33_markers$cell_type == "Opc"],
"Opc_3/4" = de34_markers$gene[de34_markers$cell_type == "Opc"] )
upset(fromList(opc.de.list), sets = c("Opc_3/4","Opc_3/3"), keep.order = TRUE, order.by = "freq",  mainbar.y.label = "Gene Intersections", sets.x.label = "Number of DEGs",  text.scale = c(2.25, 2.25, 1.9, 1.9, 2.25, 2.25))
grid.text("Oligodendrocyte progenitor cells",x = 0.71, y=0.98, gp=gpar(fontsize=18))
#Ast
ast.de.list<- list( "Ast_3/3" = de33_markers$gene[de33_markers$cell_type == "Ast"],
"Ast_3/4" = de34_markers$gene[de34_markers$cell_type == "Ast"] )
upset(fromList(ast.de.list),  sets = c("Ast_3/4","Ast_3/3"), keep.order = TRUE, order.by = "freq",  mainbar.y.label = "Gene Intersections", sets.x.label = "Number of DEGs", text.scale = c(2.25, 2.25, 1.9, 1.9, 2.25, 2))
grid.text("Astrocytes",x = 0.67, y=0.98, gp=gpar(fontsize=20))
#Mic
mic.de.list<- list( "Mic_3/3" = de33_markers$gene[de33_markers$cell_type == "Mic"],
"Mic_3/4" = de34_markers$gene[de34_markers$cell_type == "Mic"] )
upset(fromList(mic.de.list), sets = c("Mic_3/4","Mic_3/3"), keep.order = TRUE,order.by = "freq",  mainbar.y.label = "Gene Intersections", sets.x.label ="Number of DEGs",  text.scale = c(2.25, 2.25, 1.9, 1.9, 2.25, 2))
grid.text("Microglia",x = 0.67, y=0.98, gp=gpar(fontsize=20))
#Neu
neu.de.list<- list( "Neu_3/3" = de33_markers$gene[de33_markers$cell_type == "Neu"],
"Neu_3/4" = de34_markers$gene[de34_markers$cell_type == "Neu"] )
upset(fromList(neu.de.list),sets = c("Neu_3/4","Neu_3/3"), keep.order = TRUE, order.by = "freq",  mainbar.y.label = "Gene Intersections", sets.x.label = "Number of DEGs", text.scale = c(2.25, 2.25, 1.9, 1.9, 2.25, 2))
grid.text("Neurons",x = 0.67, y=0.98, gp=gpar(fontsize=20))
#Oli
oli.de.list<- list( "Oli_3/3" = de33_markers$gene[de33_markers$cell_type == "Oli"],
"Oli_3/4" = de34_markers$gene[de34_markers$cell_type == "Oli"] )
upset(fromList(oli.de.list), sets = c("Oli_3/4","Oli_3/3"), keep.order = TRUE, order.by = "freq",  mainbar.y.label = "Gene Intersections", sets.x.label = "Number of DEGs", text.scale = c(2.25, 2.25, 1.9, 1.9, 2.25, 2.25))
grid.text("Oligodendrocytes",x = 0.67, y=0.98, gp=gpar(fontsize=20))
#Opc
opc.de.list<- list( "Opc_3/3" = de33_markers$gene[de33_markers$cell_type == "Opc"],
"Opc_3/4" = de34_markers$gene[de34_markers$cell_type == "Opc"] )
upset(fromList(opc.de.list), sets = c("Opc_3/4","Opc_3/3"), keep.order = TRUE, order.by = "freq",  mainbar.y.label = "Gene Intersections", sets.x.label = "Number of DEGs",  text.scale = c(2.25, 2.25, 1.9, 1.9, 2.25, 2.25))
grid.text("Oligodendrocyte progenitor cells",x = 0.71, y=0.98, gp=gpar(fontsize=18))
library(dittoSeq)
library(dplyr)
library(UpSetR)
library(Seurat)
library(pheatmap)
library(RColorBrewer)
library(Hmisc)
library(stringr)
library(grid)
DoHeatmap(grub)
grub
DoHeatmap(grub)
grub
DoHeatmap(grub, features = c("LINGO1","DOCK4","LINC00486","CRYAB","NEAT1","FRMD4A","DPP10","HSPA1A","CNTNAP2","ROBO2"), raster=F) + scale_fill_gradientn(colors = rev(RColorBrewer::brewer.pal(n = 10, name = "RdBu")) ) + guides(color=FALSE)
levels(grub)
DoHeatmap(grub, features = c("LINGO1","DOCK4","LINC00486","CRYAB","NEAT1","FRMD4A","DPP10","HSPA1A","CNTNAP2","ROBO2"), raster=F) + scale_fill_gradientn(colors = rev(RColorBrewer::brewer.pal(n = 10, name = "RdBu")) ) + guides(color=FALSE)
levels(grub)
#DoHeatmap(grub, features = c("LINGO1","DOCK4","LINC00486","CRYAB","NEAT1","FRMD4A","DPP10","HSPA1A","CNTNAP2","ROBO2"), raster=F) + scale_fill_gradientn(colors = rev(RColorBrewer::brewer.pal(n = 10, name = "RdBu")) ) + guides(color=FALSE)
grub
#DoHeatmap(grub, features = c("LINGO1","DOCK4","LINC00486","CRYAB","NEAT1","FRMD4A","DPP10","HSPA1A","CNTNAP2","ROBO2"), raster=F) + scale_fill_gradientn(colors = rev(RColorBrewer::brewer.pal(n = 10, name = "RdBu")) ) + guides(color=FALSE)
grub
DoHeatmap(grub, features = c("LINGO1","DOCK4","LINC00486","CRYAB","NEAT1","FRMD4A","DPP10","HSPA1A","CNTNAP2","ROBO2"), raster=F) + scale_fill_gradientn(colors = rev(RColorBrewer::brewer.pal(n = 10, name = "RdBu")) ) + guides(color=FALSE)
grub
DoHeatmap(grub, features = c("LINGO1","DOCK4","LINC00486","CRYAB","NEAT1","FRMD4A","DPP10","HSPA1A","CNTNAP2","ROBO2"), group.by = Celltype) + scale_fill_gradientn(colors = rev(RColorBrewer::brewer.pal(n = 10, name = "RdBu")) ) + guides(color=FALSE)
grub
DoHeatmap(grub, features = c("LINGO1","DOCK4","LINC00486","CRYAB","NEAT1","FRMD4A","DPP10","HSPA1A","CNTNAP2","ROBO2"), group.by = Celltype) + scale_fill_gradientn(colors = rev(RColorBrewer::brewer.pal(n = 10, name = "RdBu")) ) + guides(color=FALSE)
grub
DoHeatmap(grub, features = c("LINGO1","DOCK4","LINC00486","CRYAB","NEAT1","FRMD4A","DPP10","HSPA1A","CNTNAP2","ROBO2"), group.by = APOE) + scale_fill_gradientn(colors = rev(RColorBrewer::brewer.pal(n = 10, name = "RdBu")) ) + guides(color=FALSE)
grub
View(grub)
DoHeatmap(grub, features = c("LINGO1","DOCK4","LINC00486","CRYAB","NEAT1","FRMD4A","DPP10","HSPA1A","CNTNAP2","ROBO2"), group.by = APOE) + scale_fill_gradientn(colors = rev(RColorBrewer::brewer.pal(n = 10, name = "RdBu")) ) + guides(color=FALSE)
grub$diag_apoe_cell<- paste0(grub$Diagnosis,"_", grub$ApoE,"_",gru$cell_type)
grub$diag_apoe_cell<- paste0(grub$Diagnosis,"_", grub$ApoE,"_",grub$cell_type)
Idents(grub) <- "diag_apoe_cell"
grub
View(grub)
DoHeatmap(grub, features = c("LINGO1","DOCK4","LINC00486","CRYAB","NEAT1","FRMD4A","DPP10","HSPA1A","CNTNAP2","ROBO2"), group.by = APOE) + scale_fill_gradientn(colors = rev(RColorBrewer::brewer.pal(n = 10, name = "RdBu")) ) + guides(color=FALSE)
grub$diag_apoe_cell<- paste0(grub$Diagnosis,"_", grub$ApoE,"_",grub$cell_type)
Idents(grub) <- "diag_apoe_cell"
grub
View(grub)
DoHeatmap(grub, features = c("LINGO1","DOCK4","LINC00486","CRYAB","NEAT1","FRMD4A","DPP10","HSPA1A","CNTNAP2","ROBO2")) + scale_fill_gradientn(colors = rev(RColorBrewer::brewer.pal(n = 10, name = "RdBu")) ) + guides(color=FALSE)
grub$diag_apoe_cell<- paste0(grub$Diagnosis,"_", grub$ApoE,"_",grub$cell_type)
Idents(grub) <- "diag"
grub
View(grub)
DoHeatmap(grub, features = c("LINGO1","DOCK4","LINC00486","CRYAB","NEAT1","FRMD4A","DPP10","HSPA1A","CNTNAP2","ROBO2")) + scale_fill_gradientn(colors = rev(RColorBrewer::brewer.pal(n = 10, name = "RdBu")) ) + guides(color=FALSE)
grub$diag_apoe_cell<- paste0(grub$Diagnosis,"_", grub$ApoE)
Idents(grub) <- "diag"
grub
View(grub)
DoHeatmap(grub, features = c("LINGO1","DOCK4","LINC00486","CRYAB","NEAT1","FRMD4A","DPP10","HSPA1A","CNTNAP2","ROBO2")) + scale_fill_gradientn(colors = rev(RColorBrewer::brewer.pal(n = 10, name = "RdBu")) ) + guides(color=FALSE)
grub$diag_apoe<- paste0(grub$Diagnosis,"_", grub$ApoE)
Idents(grub) <- "diag_apoe"
grub
View(grub)
DoHeatmap(grub, features = c("LINGO1","DOCK4","LINC00486","CRYAB","NEAT1","FRMD4A","DPP10","HSPA1A","CNTNAP2","ROBO2")) + scale_fill_gradientn(colors = rev(RColorBrewer::brewer.pal(n = 10, name = "RdBu")) ) + guides(color=FALSE)
grub$diag_apoe<- paste0(grub$Diagnosis,"_", grub$ApoE)
Idents(grub) <- "diag_apoe"
grub
View(grub)
DoHeatmap(grub, features = c("LINGO1","DOCK4","LINC00486","CRYAB","NEAT1","FRMD4A","DPP10","HSPA1A","CNTNAP2","ROBO2")) + scale_fill_gradientn(colors = rev(RColorBrewer::brewer.pal(n = 10, name = "RdBu")) ) + guides(color=FALSE)
grub$diag_apoe<- paste0(grub$Diagnosis,"_", grub$ApoE)
Idents(grub) <- "diag_apoe"
DoHeatmap(grub, features = c("LINGO1","DOCK4","LINC00486","CRYAB","NEAT1","FRMD4A","DPP10","HSPA1A","CNTNAP2","ROBO2")) + scale_fill_gradientn(colors = rev(RColorBrewer::brewer.pal(n = 10, name = "RdBu")) )
grub$diag_apoe<- paste0(grub$Diagnosis,"_", grub$ApoE)
Idents(grub) <- "diag_apoe"
DoHeatmap(grub, features = c("LINGO1","DOCK4","LINC00486","CRYAB","NEAT1","FRMD4A","DPP10","HSPA1A","CNTNAP2","ROBO2")) + scale_fill_gradientn(colors = rev(RColorBrewer::brewer.pal(n = 10, name = "RdBu")) )
Idents(grub) <- "cell_type"
DoHeatmap(grub, features = c("LINGO1","DOCK4","LINC00486","CRYAB","NEAT1","FRMD4A","DPP10","HSPA1A","CNTNAP2","ROBO2")) + scale_fill_gradientn(colors = rev(RColorBrewer::brewer.pal(n = 10, name = "RdBu")) )
grub$diag_apoe<- paste0(grub$Diagnosis,"_", grub$ApoE)
Idents(grub) <- "diag_apoe"
DoHeatmap(grub, features = c("LINGO1","DOCK4","LINC00486","CRYAB","NEAT1","FRMD4A","DPP10","HSPA1A","CNTNAP2","ROBO2")) + scale_fill_gradientn(colors = rev(RColorBrewer::brewer.pal(n = 10, name = "RdBu")) )
Idents(grub) <- "cell_type"
DoHeatmap(grub, features = c("LINGO1","DOCK4","LINC00486","CRYAB","NEAT1","FRMD4A","DPP10","HSPA1A","CNTNAP2","ROBO2"))
grub$diag_apoe<- paste0(grub$Diagnosis,"_", grub$ApoE)
Idents(grub) <- "diag_apoe"
DoHeatmap(grub, features = c("LINGO1","DOCK4","LINC00486","CRYAB","NEAT1","FRMD4A","DPP10","HSPA1A","CNTNAP2","ROBO2")) + scale_fill_gradientn(colors = rev(RColorBrewer::brewer.pal(n = 10, name = "RdBu")) )
Idents(grub) <- "cell_type"
DoHeatmap(grub, features = c("LINGO1","DOCK4","LINC00486","CRYAB","NEAT1","FRMD4A","DPP10","HSPA1A","CNTNAP2","ROBO2"), lines.width=4) + scale_fill_gradientn(colors = rev(RColorBrewer::brewer.pal(n = 10, name = "RdBu")) )
grub$diag_apoe<- paste0(grub$Diagnosis,"_", grub$ApoE)
Idents(grub) <- "diag_apoe"
DoHeatmap(grub, features = c("LINGO1","DOCK4","LINC00486","CRYAB","NEAT1","FRMD4A","DPP10","HSPA1A","CNTNAP2","ROBO2")) + scale_fill_gradientn(colors = rev(RColorBrewer::brewer.pal(n = 10, name = "RdBu")) )
Idents(grub) <- "cell_type"
DoHeatmap(grub, features = c("LINGO1","DOCK4","LINC00486","CRYAB","NEAT1","FRMD4A","DPP10","HSPA1A","CNTNAP2","ROBO2"), lines.width=10, angle = 70) + scale_fill_gradientn(colors = rev(RColorBrewer::brewer.pal(n = 10, name = "RdBu")) )
grub$diag_apoe<- paste0(grub$Diagnosis,"_", grub$ApoE)
Idents(grub) <- "diag_apoe"
DoHeatmap(grub, features = c("LINGO1","DOCK4","LINC00486","CRYAB","NEAT1","FRMD4A","DPP10","HSPA1A","CNTNAP2","ROBO2")) + scale_fill_gradientn(colors = rev(RColorBrewer::brewer.pal(n = 10, name = "RdBu")) )
Idents(grub) <- "cell_type"
DoHeatmap(grub, features = c("LINGO1","DOCK4","LINC00486","CRYAB","NEAT1","FRMD4A","DPP10","HSPA1A","CNTNAP2","ROBO2"),raster=F, lines.width=70, angle = 70) + scale_fill_gradientn(colors = rev(RColorBrewer::brewer.pal(n = 10, name = "RdBu")) )
grub$diag_apoe<- paste0(grub$Diagnosis,"_", grub$ApoE)
Idents(grub) <- "diag_apoe"
DoHeatmap(grub, features = c("LINGO1","DOCK4","LINC00486","CRYAB","NEAT1","FRMD4A","DPP10","HSPA1A","CNTNAP2","ROBO2"),raster=F, lines.width=70, angle = 70) + scale_fill_gradientn(colors = rev(RColorBrewer::brewer.pal(n = 10, name = "RdBu")) )
Idents(grub) <- "cell_type"
DoHeatmap(grub, features = c("LINGO1","DOCK4","LINC00486","CRYAB","NEAT1","FRMD4A","DPP10","HSPA1A","CNTNAP2","ROBO2"),raster=F, lines.width=70, angle = 70) + scale_fill_gradientn(colors = rev(RColorBrewer::brewer.pal(n = 10, name = "RdBu")) )
dittoHeatmap(grub, getGenes(grub)[1:10],
annot.by = c("diag_apoe", "cell_type"))
dittoHeatmap(grub, c("LINGO1","DOCK4","LINC00486","CRYAB","NEAT1","FRMD4A","DPP10","HSPA1A","CNTNAP2","ROBO2"),
annot.by = c("diag_apoe", "cell_type"))
de33_markers<- subset(de33_markers_all, p_val_adj < 0.05)
de34_markers<- subset(de34_markers_all, p_val_adj < 0.05)
grub_markers<- rbind(de33_markers,de34_markers)
grub_markers$group<- capitalize(grub_markers$group)
grub_markers<- grub_markers[,c(1,10,7)]
for(ct in unique(grub_markers$group)){
new_col<- print(paste0('grub_markers$',ct,'<- ifelse(grub_markers$group == "',ct,'",grub_markers$avg_logFC, 0)'),sep='',quote = FALSE)
eval(expr = parse(text = new_col))
}
#Remove duplicates
grub_markers <- grub_markers %>% group_by(gene) %>% mutate(count = n())
grub_markers<- grub_markers %>%
arrange(gene)
which(grub_markers$gene ==  "CLU")
grub_markers<- grub_markers %>%                  # Specify data frame
group_by(gene) %>%                             # Specify group indicator
summarise_at(vars(colnames(grub_markers[,4:13])),  # Specify column
list(name = sum))                        # Specify function
grub_markers<- as.data.frame(grub_markers)
colnames(grub_markers)[2:11]<-gsub("_name","",colnames(grub_markers[2:11]))
rownames(grub_markers)<- grub_markers$gene
grub_markers$gene<- NULL
grub_markers<- grub_markers[,c(1,6,2,7,3,8,4,9,5,10)]
anno <- data.frame( Celltype=  factor(colnames(grub_markers)))
rownames(anno)<- anno$Celltype
anno$APOE<- str_sub(anno$Celltype, -2,-1)
anno$Celltype<- str_sub(anno$Celltype, 1,3)
rownames(anno)<- gsub(33, "_3/3",rownames(anno))
rownames(anno)<- gsub(34, "_3/4",rownames(anno))
anno$APOE<- gsub(33, "3/3",anno$APOE)
anno$APOE<- gsub(34, "3/4",anno$APOE)
annoc<- list(APOE = c("3/3"= "#AD7700", "3/4" = "#1C91D4"), Celltype=( c("Ast" = "#E69F00", "Neu"= "aquamarine2", "Mic" = "#0072B2", "Oli"="#D55E00","Opc" ="#CC79A7" )))
colnames(grub_markers)<- gsub(33, "_3/3",colnames(grub_markers))
colnames(grub_markers)<- gsub(34, "_3/4",colnames(grub_markers))
rangem <- max(abs(grub_markers));
pheatmap(grub_markers, angle_col= "90", angle_row= "45",fontsize_row = 12,fontsize_col= 12 , show_rownames = FALSE, show_colnames = FALSE, scale = "none" ,  border_color = "black",fontsize= 12,annotation_col= anno, annotation_colors = annoc ,color = colorRampPalette(c("gold3", "white", "blue"))(100), breaks = seq(-rangem, rangem, length.out = 100))
dittoHeatmap(grub, c("LINGO1","DOCK4","LINC00486","CRYAB","NEAT1","FRMD4A","DPP10","HSPA1A","CNTNAP2","ROBO2"),
annot.by = c( "cell_type", "APOE"))
dittoHeatmap(grub, c("LINGO1","DOCK4","LINC00486","CRYAB","NEAT1","FRMD4A","DPP10","HSPA1A","CNTNAP2","ROBO2"),
annot.by = c( "cell_type", "Apoe"))
dittoHeatmap(grub, c("LINGO1","DOCK4","LINC00486","CRYAB","NEAT1","FRMD4A","DPP10","HSPA1A","CNTNAP2","ROBO2"),
annot.by = c( "cell_type", "ApoE"))
dittoHeatmap(grub, c("LINGO1","DOCK4","LINC00486","CRYAB","NEAT1","FRMD4A","DPP10","HSPA1A","CNTNAP2","ROBO2"),
annot.by = c( "cell_type", "ApoE"), order.by = "ApoE")
dittoHeatmap(grub, c("LINGO1","DOCK4","LINC00486","CRYAB","NEAT1","FRMD4A","DPP10","HSPA1A","CNTNAP2","ROBO2"),
annot.by = c( "cell_type", "ApoE"), order.by = "ApoE", heatmap.colors = rev(RColorBrewer::brewer.pal(n = 10, name = "RdBu")))
dittoHeatmap(grub, c("LINGO1","DOCK4","LINC00486","CRYAB","NEAT1","FRMD4A","DPP10","HSPA1A","CNTNAP2","ROBO2"),
annot.by = c( "cell_type", "ApoE"), order.by = "ApoE", heatmap.colors = rev(RColorBrewer::brewer.pal(n = 5, name = "RdBu")))
dittoHeatmap(grub, c("LINGO1","DOCK4","LINC00486","CRYAB","NEAT1","FRMD4A","DPP10","HSPA1A","CNTNAP2","ROBO2"),
annot.by = c( "cell_type", "ApoE"), order.by = "ApoE", heatmap.colors = rev(RColorBrewer::brewer.pal(n = 50, name = "RdBu")))
dittoHeatmap(grub, c("LINGO1","DOCK4","LINC00486","CRYAB","NEAT1","FRMD4A","DPP10","HSPA1A","CNTNAP2","ROBO2"),
annot.by = c( "cell_type", "ApoE"), order.by = "ApoE", heatmap.colors =colorRampPalette(c("gold3", "white", "blue"))(100))
dittoHeatmap(grub, c("LINGO1","DOCK4","LINC00486","CRYAB","NEAT1","FRMD4A","DPP10","HSPA1A","CNTNAP2","ROBO2"),
annot.by = c( "Celltype", "ApoE"), order.by = "ApoE", heatmap.colors =colorRampPalette(c("gold3", "white", "blue"))(100))
dittoHeatmap(grub_markers, c("LINGO1","DOCK4","LINC00486","CRYAB","NEAT1","FRMD4A","DPP10","HSPA1A","CNTNAP2","ROBO2"),
annot.by = c( "Celltype", "ApoE"), order.by = "ApoE", heatmap.colors =colorRampPalette(c("gold3", "white", "blue"))(100))
View(grub_markers)
dittoHeatmap(grub_markers, c("LINGO1","DOCK4","LINC00486","CRYAB","NEAT1","FRMD4A","DPP10","HSPA1A","CNTNAP2","ROBO2"),
annot.by = c( "Celltype", "ApoE"), order.by = "ApoE", heatmap.colors =colorRampPalette(c("gold3", "white", "blue"))(100))
dittoHeatmap(grub, c("LINGO1","DOCK4","LINC00486","CRYAB","NEAT1","FRMD4A","DPP10","HSPA1A","CNTNAP2","ROBO2"),
annot.by = c( "cellType", "ApoE"), order.by = "ApoE", heatmap.colors =colorRampPalette(c("gold3", "white", "blue"))(100))
grub2 <- subset(grub, grub$ApoE %in% c("3/3", "4/4"))
grub2 <- subset(grub, grub$ApoE %in% c('3/3', "4/4"))
grub2 <- subset(grub, grub$ApoE != "44")
grub2 <- subset(grub, subset= ApoE != "44")
dittoHeatmap(grub2, c("LINGO1","DOCK4","LINC00486","CRYAB","NEAT1","FRMD4A","DPP10","HSPA1A","CNTNAP2","ROBO2"),
annot.by = c( "cell_type", "ApoE"), order.by = "ApoE", heatmap.colors =colorRampPalette(c("gold3", "white", "blue"))(100))
grub2 <- subset(grub, subset= ApoE != "44")
grub2 <- subset(grub2, subset= cell_type != "End")
dittoHeatmap(grub2, c("LINGO1","DOCK4","LINC00486","CRYAB","NEAT1","FRMD4A","DPP10","HSPA1A","CNTNAP2","ROBO2"),
annot.by = c( "cell_type", "ApoE"), order.by = "ApoE", heatmap.colors =colorRampPalette(c("gold3", "white", "blue"))(100))
grub2 <- subset(grub, subset= ApoE != "44")
grub2 <- subset(grub2, subset= cell_type != "End")
dittoHeatmap(grub2, c("LINGO1","DOCK4","LINC00486","CRYAB","NEAT1","FRMD4A","DPP10","HSPA1A","CNTNAP2","ROBO2"),
annot.by = c( "cell_type", "ApoE"), order.by = c("ApoE", "cell_type"), heatmap.colors =colorRampPalette(c("gold3", "white", "blue"))(100))
grub2 <- subset(grub, subset= ApoE != "44")
grub2 <- subset(grub2, subset= cell_type != "End")
dittoHeatmap(grub2, c("LINGO1","DOCK4","LINC00486","CRYAB","NEAT1","FRMD4A","DPP10","HSPA1A","CNTNAP2","ROBO2"),
annot.by = c( "cell_type", "ApoE"), order.by = c("ApoE", "cell_type"), heatmap.colors =colorRampPalette(c("gold3", "white", "blue"))(100), cutree_col=20)
grub2 <- subset(grub, subset= ApoE != "44")
grub2 <- subset(grub2, subset= cell_type != "End")
dittoHeatmap(grub2, c("LINGO1","DOCK4","LINC00486","CRYAB","NEAT1","FRMD4A","DPP10","HSPA1A","CNTNAP2","ROBO2"),
annot.by = c( "cell_type", "ApoE"), order.by = c("ApoE", "cell_type"), heatmap.colors =colorRampPalette(c("gold3", "white", "blue"))(100), complex=TRUE, cutree_col=20)
BiocManager::install('ComplexHeatmap')
grub2 <- subset(grub, subset= ApoE != "44")
grub2 <- subset(grub2, subset= cell_type != "End")
dittoHeatmap(grub2, c("LINGO1","DOCK4","LINC00486","CRYAB","NEAT1","FRMD4A","DPP10","HSPA1A","CNTNAP2","ROBO2"),
annot.by = c( "cell_type", "ApoE"), order.by = c("ApoE", "cell_type"), heatmap.colors =colorRampPalette(c("gold3", "white", "blue"))(100),  treeheight_row=20)
grub2 <- subset(grub, subset= ApoE != "44")
grub2 <- subset(grub2, subset= cell_type != "End")
dittoHeatmap(grub2, c("LINGO1","DOCK4","LINC00486","CRYAB","NEAT1","FRMD4A","DPP10","HSPA1A","CNTNAP2","ROBO2"),
annot.by = c( "cell_type", "ApoE"), order.by = c("ApoE", "cell_type"), heatmap.colors =colorRampPalette(c("gold3", "white", "blue"))(100),  treeheight_row=20)
grub2 <- subset(grub, subset= ApoE != "44")
grub2 <- subset(grub2, subset= cell_type != "End")
dittoHeatmap(grub2, c("LINGO1","DOCK4","LINC00486","CRYAB","NEAT1","FRMD4A","DPP10","HSPA1A","CNTNAP2","ROBO2"),
annot.by = c( "cell_type", "ApoE"), order.by = c("ApoE", "cell_type"), heatmap.colors =colorRampPalette(c("gold3", "white", "blue"))(100), complex=TRUE, treeheight_row=200)
grub2 <- subset(grub, subset= ApoE != "44")
grub2 <- subset(grub2, subset= cell_type != "End")
dittoHeatmap(grub2, c("LINGO1","DOCK4","LINC00486","CRYAB","NEAT1","FRMD4A","DPP10","HSPA1A","CNTNAP2","ROBO2"),
annot.by = c( "cell_type", "ApoE"), order.by = c("ApoE", "cell_type"), heatmap.colors =colorRampPalette(c("gold3", "white", "blue"))(100), complex=TRUE, treeheight_row=100, treeheight_col=100)
grub2 <- subset(grub, subset= ApoE != "44")
grub2 <- subset(grub2, subset= cell_type != "End")
dittoHeatmap(grub2, c("LINGO1","DOCK4","LINC00486","CRYAB","NEAT1","FRMD4A","DPP10","HSPA1A","CNTNAP2","ROBO2"),
annot.by = c( "cell_type", "ApoE"), order.by = c("ApoE", "cell_type"), heatmap.colors =colorRampPalette(c("gold3", "white", "blue"))(100), complex=TRUE, treeheight_row=30, cutree_cols=5, treeheight_col=100)
grub2 <- subset(grub, subset= ApoE != "44")
grub2 <- subset(grub2, subset= cell_type != "End")
dittoHeatmap(grub2, c("LINGO1","DOCK4","LINC00486","CRYAB","NEAT1","FRMD4A","DPP10","HSPA1A","CNTNAP2","ROBO2"),
annot.by = c( "cell_type", "ApoE"), order.by = c("ApoE", "cell_type"), heatmap.colors =colorRampPalette(c("gold3", "white", "blue"))(100), complex=TRUE, treeheight_row=30, cutree_cols=10, treeheight_col=100)
grub2 <- subset(grub, subset= ApoE != "44")
grub2 <- subset(grub2, subset= cell_type != "End")
dittoHeatmap(grub2, c("LINGO1","DOCK4","LINC00486","CRYAB","NEAT1","FRMD4A","DPP10","HSPA1A","CNTNAP2","ROBO2"),
annot.by = c( "cell_type", "ApoE"), order.by = c("ApoE", "cell_type"), heatmap.colors =colorRampPalette(c("gold3", "white", "blue"))(100), complex=TRUE, treeheight_row=30, treeheight_col=100)
grub2 <- subset(grub, subset= ApoE != "44")
grub<- readRDS( "grub_new_label_no_hybrid.rds")
meta<- read.table("data/scRNA_metadata.tsv",header= TRUE, sep = "\t")
supp<- read.csv("data/supp_data.csv" ,header= TRUE, sep = ";", stringsAsFactors=FALSE)
DefaultAssay(grub) <- "SCT"
grub$Braak<- ifelse(grub$Diagnosis == "AD", "6", "NR")
grub$Plaque<- ifelse(grub$Diagnosis == "AD", "Numerous diffuse and neuritic Abeta plaque", "None")
grub$Plaque<- ifelse(grub$Patient == "Ct1", "Occasional diffuse plaque in cortex", grub$Plaque)
grub$CERAD<- ifelse(grub$Plaque == "Numerous diffuse and neuritic Abeta plaque", "1", "4") #1=definite, 4=No AD
grub$CERAD<- ifelse(grub$Plaque == "Occasional diffuse plaque in cortex", "3",grub$CERAD) #3=possible, 2=probable
grub$CERAD<- as.factor(grub$CERAD)
grub$Braak<- as.factor(grub$Braak)
library(Hmisc)
grub$cell_type<- capitalize(grub$cell_type)
grub$ApoE<- ifelse(grub$ApoE == "33", "3/3", grub$ApoE)
grub$ApoE<- ifelse(grub$ApoE == "34", "3/4", grub$ApoE)
grub$diag_cell_apoe<- paste0(grub$Diagnosis,"_", grub$cell_type, "_", grub$ApoE)
View(grub)
View(grub@meta.data)
table(grub$cell_type)
table(grub$cell_type2)
grub0<-readRDS("grub_original.rds")
grub0 <- subset(grub0, subset = TAG %in% grub$TAG)
DefaultAssay(grub0)<- "RNA"
grub0@meta.data<-dplyr::inner_join(grub0@meta.data, grub@meta.data[,c(12,22,26:29)], by="TAG")
grub0$cell_type<- capitalize(grub0$cell_type)
grub0$ApoE<- ifelse(grub0$Patient == "AD1", "3/4", grub0$ApoE)
grub0$ApoE<- ifelse(grub0$Patient == "AD2", "3/4", grub0$ApoE)
grub0$ApoE<- ifelse(grub0$Patient == "AD3", "4/4", grub0$ApoE)
grub0$ApoE<- ifelse(grub0$Patient == "AD4", "3/3", grub0$ApoE)
grub0$ApoE<- ifelse(grub0$Patient == "AD5", "4/4", grub0$ApoE)
grub0$ApoE<- ifelse(grub0$Patient == "AD6", "3/4", grub0$ApoE)
grub0$ApoE<- ifelse(grub0$Patient == "Ct1", "3/3", grub0$ApoE)
grub0$ApoE<- ifelse(grub0$Patient == "Ct2", "3/3", grub0$ApoE)
grub0$ApoE<- ifelse(grub0$Patient == "Ct3", "3/3", grub0$ApoE)
grub0$ApoE<- ifelse(grub0$Patient == "Ct4", "3/4", grub0$ApoE)
grub0$ApoE<- ifelse(grub0$Patient == "Ct5", "3/3", grub0$ApoE)
de33_markers<- subset(de33_markers_all, p_val_adj < 0.05 & abs(avg_logFC) > 0.25)
de33_markers_all<- read.csv("grub_DEG33.csv",header= TRUE, sep = ",", stringsAsFactors=FALSE)
de34_markers_all<- read.csv("grub_DEG34.csv",header= TRUE, sep = ",", stringsAsFactors=FALSE)
de33_markers_all$X <- NULL
de34_markers_all$X<- NULL
#remove MALAT1- reported to be an artifact
de33_markers_all<-de33_markers_all[de33_markers_all$gene != "MALAT1",]
de34_markers_all<- de34_markers_all[de34_markers_all$gene != "MALAT1",]
de33_markers<- subset(de33_markers_all, p_val_adj < 0.05 & abs(avg_logFC) > 0.25)
de34_markers<- subset(de34_markers_all, p_val_adj < 0.05 & abs(avg_logFC) > 0.25)
all_de_num<- rbind(as.data.frame(table(de33_markers$group, de33_markers$dir)),as.data.frame(table(de34_markers$group, de34_markers$dir)))
all_de_num$Freq<- ifelse(all_de_num$Var2 == "neg", all_de_num$Freq * -1,all_de_num$Freq)
all_de_num$ApoE<-  str_sub(all_de_num$Var1,-2,-1)
all_de_num$Celltype<-  gsub(all_de_num$ApoE,"",all_de_num$Var1)
all_de_num$Celltype<-  gsub(34,"",all_de_num$Celltype)
table(de33_markers$group, de33_markers$dir)
table(de34_markers$group, de34_markers$dir)
library(Hmisc)
all_de_num$Celltype<- capitalize(all_de_num$Celltype)
ggplot(all_de_num, aes(x = Celltype, y = Freq))+ geom_col(aes(fill = ApoE), position = "dodge", width = 0.5) + xlab("Cell type") + ylab("Number of DE genes") + coord_flip() + scale_fill_manual(values = c("#AD7700" ,"#1C91D4"))  +  scale_y_continuous(labels = function(x) abs(x), n.breaks = 8) +  theme_bw() + theme(legend.text = element_text( size = 20), legend.title = element_text( size = 20), axis.text=element_text(size=20), axis.title=element_text(size=20), plot.title = element_text(size=20),panel.border = element_blank(),panel.grid.major = element_blank(),panel.grid.minor = element_blank(), axis.line = element_line(colour = "black")) +   geom_hline(yintercept = 0,lty=2) + expand_limits(y= 150)
de33_markers_all$cell_type<- capitalize(de33_markers_all$cell_type)
de33_markers_all$group<- capitalize(de33_markers_all$group)
de34_markers_all$cell_type<- capitalize(de34_markers_all$cell_type)
de34_markers_all$group<- capitalize(de34_markers_all$group)
#Create dataframe for each cell type/apoe group
for (i in unique(de33_markers_all$cell_type)){
for (j in c("33","34")){
makedf<- print(paste0(i,j,'_markers<- de',j,'_markers_all[de',j,'_markers_all$group == "',i,j,'",]'), sep='', quote=FALSE)
show(eval(expr = parse(text =   makedf)))
}
}
#select gene(1), p_val_adj (5), and avg_logF C10)
#Note these are unfiltered DE tables, so it includes insignificant DEGs and low thresholds
for (i in unique(de33_markers_all$cell_type)){
line1<- print(paste0(i,'_markers<- dplyr::full_join(',i,'33_markers[,c(1,5,10)],',i,'34_markers[,c(1,5,10)], by ="gene")'), sep='',quote = FALSE)
line2<-print(paste0(i,'_markers$dir<- ifelse(',i,'_markers$avg_logFC.x >0 &',i,'_markers$avg_logFC.y >0, "same","opp")'), sep='',quote = FALSE)
line3<-print(paste0(i,'_markers$dir<- ifelse(',i,'_markers$avg_logFC.x <0 &',i,'_markers$avg_logFC.y <0, "same",',i,'_markers$dir)'), sep='',quote = FALSE)
line4<-print(paste0(i,'_markers<- na.omit(',i,'_markers)'), sep='',quote = FALSE)
line5<-print(paste0(i,'_markers$sig<- ifelse(',i,'_markers$p_val_adj.x <0.05,"<0.05 in APOE3/3","Not Significant")'), sep='',quote = FALSE)
line6<-print(paste0(i,'_markers$sig<- ifelse(',i,'_markers$p_val_adj.y <0.05,"<0.05 in APOE3/4",',i,'_markers$sig)'), sep='',quote = FALSE)
line7<- print(paste0(i,'_markers$sig<- ifelse(',i,'_markers$p_val_adj.x <0.05 & ',i,'_markers$p_val_adj.y <0.05 &',i,'_markers$dir == "same", "<0.05 in Both & Same Direction", ',i,'_markers$sig)'), sep='',quote = FALSE)
line8<- print(paste0(i,'_markers$sig<- ifelse(',i,'_markers$p_val_adj.x <0.05 & ',i,'_markers$p_val_adj.y <0.05 &',i,'_markers$dir == "opp", "<0.05 in Both & Opp Direction", ',i,'_markers$sig)'), sep='',quote = FALSE)
line9<- print(paste0(i,'_markers$sig<- as.factor(',i,'_markers$sig)'), sep='',quote = FALSE)
line10<-print(paste0(i,'_markers$sigcols<- ifelse(',i,'_markers$sig == "<0.05 in APOE3/3" , "#AD7700", "#636363")'), sep='',quote = FALSE)
line11<-print(paste0(i,'_markers$sigcols<- ifelse(',i,'_markers$sig == "<0.05 in APOE3/4" , "#1C91D4",', i,'_markers$sigcols)'), sep='',quote = FALSE)
line12<-print(paste0(i,'_markers$sigcols<- ifelse(',i,'_markers$sig == "<0.05 in Both & Opp Direction" , "#CC79A7",', i,'_markers$sigcols)'), sep='',quote = FALSE)
line13<-print(paste0(i,'_markers$sigcols<- ifelse(',i,'_markers$sig == "<0.05 in Both & Same Direction" , "#D5C711",', i,'_markers$sigcols)'), sep='',quote = FALSE)
line14<-print(paste0(i,'_markers$sigcols<- as.factor(',i,'_markers$sigcols)'), sep='',quote = FALSE)
line15<-print(paste0(i,'_markers$sig2<- ifelse(',i,'_markers$sig == "Not Significant" , "0", "1")'), sep='',quote = FALSE)
eval(expr = parse(text = c(line1,line2,line3,line4, line5, line6,line7, line8, line9, line10,line11, line12, line13, line14,line15)))
}
rm(line1,line2,line3,line4, line5, line6,line7, line8, line9, line10,line11, line12, line13, line14,line15)
marktype<- c("Ast",  "Neu", "Mic", "Oli" , "Opc")
for (i in marktype){
p1= print(paste0('table(',i,'_markers$sig)'),sep='', quote=FALSE)
eval(expr = parse(text = c(p1)))
}
#explore range of log fold changes
for (i in marktype){
p1= print(paste0('hist(',i,'_markers$avg_logFC.x)'),sep='', quote=FALSE)
p2= print(paste0('hist(',i,'_markers$avg_logFC.y)'),sep='', quote=FALSE)
eval(expr = parse(text = c(p1,p2)))
}
#assign colors
my_col <- as.character(Ast_markers$sigcols)
names(my_col) <- as.character(Ast_markers$sig)
de33_markers<- subset(de33_markers_all, p_val_adj < 0.05 & abs(avg_logFC) > 0.25)
de34_markers<- subset(de34_markers_all, p_val_adj < 0.05 & abs(avg_logFC) > 0.25)
math_markers<- rbind(de33_markers,de34_markers)
de33 <- subset(de33_markers, gene %in% de34_markers$gene)
de34 <- subset(de34_markers, gene %in% de33_markers$gene)
combined <- rbind(de33,de34)
sorted_comb <- combined[order(combined$gene, -abs(combined$avg_logFC)),]
# removing duplicates from the sorted sub column
ans <- sorted_comb[!duplicated(sorted_comb$gene),]
ans_sorted <- ans[order(-abs(ans$avg_logFC)),]
View(ans_sorted)
max_genes <- ans_sorted$gene[1:10]
max_genes
grub$diag_cell<- paste0(grub$Diagnosis,"_",grub$cell_type)
grub$diag_apoe<- paste0(grub$Diagnosis,"_",grub$ApoE)
# Maximum genes: "LINGO1"    "DOCK4"     "LINC00486" "CRYAB"     "NEAT1"     "FRMD4A"    "DPP10"     "HSPA1A"    "CNTNAP2"   "ROBO2"
dittoPlot( grub,  var="LINGO1" , group.by = "diag_apoe", split.by =  "cell_type",  x.reorder = c(1,3,2,4), color.panel = c(dittoColors()[36],dittoColors()[29],dittoColors()[28], dittoColors()[26]), split.ncol=5, cells.use = colnames( grub)[grub$cell_type != "End" & grub$ApoE != "44"])  + theme( axis.text=element_text(size=20), axis.title=element_text(size=20), plot.title =  element_blank(),  strip.text = element_text(size = 20))  + theme(legend.text = element_text( size = 20), legend.title =  element_text( "APOE",size = 20), axis.text.x = element_blank(), axis.title.x=element_blank(), axis.ticks.x = element_blank())
dittoPlot( grub,  "DOCK4" , group.by = "diag_apoe", split.by =  "cell_type",   x.reorder = c(1,3,2,4), color.panel = c(dittoColors()[36],dittoColors()[29],dittoColors()[28], dittoColors()[26]), split.ncol=5 , cells.use = colnames( grub)[grub$cell_type != "End" & grub$ApoE != "44"]) + theme( axis.text=element_text(size=20), axis.title=element_text(size=20), plot.title =  element_blank(),  strip.text = element_text(size = 20))  + theme(legend.text = element_text( size = 20), legend.title =  element_text( "APOE",size = 20), axis.text.x = element_blank(), axis.title.x=element_blank(), axis.ticks.x = element_blank())
dittoPlot( grub,  "LINC00486" , group.by = "diag_apoe", split.by =  "cell_type",  x.reorder = c(1,3,2,4), color.panel = c(dittoColors()[36],dittoColors()[29],dittoColors()[28], dittoColors()[26]),  split.ncol=5 , cells.use = colnames( grub)[grub$cell_type != "End" & grub$ApoE != "44"]) + theme( axis.text=element_text(size=20), axis.title=element_text(size=20), plot.title = element_blank(),  strip.text = element_text(size = 20)) + theme(legend.text = element_text( size = 20), legend.title =  element_text( "APOE",size = 20), axis.text.x = element_blank(), axis.title.x=element_blank(), axis.ticks.x = element_blank())
dittoPlot( grub,  "CRYAB" , group.by = "diag_apoe", split.by =  "cell_type",  x.reorder = c(1,3,2,4), color.panel = c(dittoColors()[36],dittoColors()[29],dittoColors()[28], dittoColors()[26]),  split.ncol=5 , cells.use = colnames( grub)[grub$cell_type != "End" & grub$ApoE != "44"]) + theme( axis.text=element_text(size=20), axis.title=element_text(size=20), plot.title = element_blank(),  strip.text = element_text(size = 20))  + theme(legend.text = element_text( size = 20), legend.title =  element_text( "APOE",size = 20), axis.text.x = element_blank(), axis.title.x=element_blank(), axis.ticks.x = element_blank())
dittoPlot( grub,  "NEAT1" , group.by = "diag_apoe", split.by =  "cell_type",  x.reorder = c(1,3,2,4), color.panel = c(dittoColors()[36],dittoColors()[29],dittoColors()[28], dittoColors()[26]),  split.ncol=5 , cells.use = colnames( grub)[grub$cell_type != "End" & grub$ApoE != "44"]) + theme( axis.text=element_text(size=20), axis.title=element_text(size=20), plot.title = element_blank(),  strip.text = element_text(size = 20))  + theme(legend.text = element_text( size = 20), legend.title =  element_text( "APOE",size = 20), axis.text.x = element_blank(), axis.title.x=element_blank(), axis.ticks.x = element_blank())
de33_markers<- subset(de33_markers_all, p_val_adj < 0.05)
de34_markers<- subset(de34_markers_all, p_val_adj < 0.05)
grub_markers<- rbind(de33_markers,de34_markers)
grub_markers$group<- capitalize(grub_markers$group)
grub_markers<- grub_markers[,c(1,10,7)]
for(ct in unique(grub_markers$group)){
new_col<- print(paste0('grub_markers$',ct,'<- ifelse(grub_markers$group == "',ct,'",grub_markers$avg_logFC, 0)'),sep='',quote = FALSE)
eval(expr = parse(text = new_col))
}
# Remove duplicates
grub_markers <- grub_markers %>% group_by(gene) %>% mutate(count = n())
grub_markers<- grub_markers %>%
arrange(gene)
grub_markers<- grub_markers %>%                  # Specify data frame
group_by(gene) %>%                             # Specify group indicator
summarise_at(vars(colnames(grub_markers[,4:13])),  # Specify column
list(name = sum))                        # Specify function
grub_markers<- as.data.frame(grub_markers)
colnames(grub_markers)[2:11]<-gsub("_name","",colnames(grub_markers[2:11]))
rownames(grub_markers)<- grub_markers$gene
grub_markers$gene<- NULL
grub_markers<- grub_markers[,c(1,6,2,7,3,8,4,9,5,10)]
anno <- data.frame( Celltype=  factor(colnames(grub_markers)))
rownames(anno)<- anno$Celltype
anno$APOE<- str_sub(anno$Celltype, -2,-1)
anno$Celltype<- str_sub(anno$Celltype, 1,3)
rownames(anno)<- gsub(33, "_3/3",rownames(anno))
rownames(anno)<- gsub(34, "_3/4",rownames(anno))
anno$APOE<- gsub(33, "3/3",anno$APOE)
anno$APOE<- gsub(34, "3/4",anno$APOE)
annoc<- list(APOE = c("3/3"= "#AD7700", "3/4" = "#1C91D4"), Celltype=( c("Ast" = "#E69F00", "Neu"= "aquamarine2", "Mic" = "#0072B2", "Oli"="#D55E00","Opc" ="#CC79A7" )))
colnames(grub_markers)<- gsub(33, "_3/3",colnames(grub_markers))
colnames(grub_markers)<- gsub(34, "_3/4",colnames(grub_markers))
rangem <- max(abs(grub_markers));
pheatmap(grub_markers, angle_col= "90", angle_row= "45",fontsize_row = 12,fontsize_col= 12 , show_rownames = FALSE, show_colnames = FALSE, scale = "none" ,  border_color = "black",fontsize= 12,annotation_col= anno, annotation_colors = annoc ,color = colorRampPalette(c("gold3", "white", "blue"))(100), breaks = seq(-rangem, rangem, length.out = 100))
grub2 <- subset(grub, subset= ApoE != "44")
grub2 <- subset(grub2, subset= cell_type != "End")
dittoHeatmap(grub2, c("LINGO1","DOCK4","LINC00486","CRYAB","NEAT1","FRMD4A","DPP10","HSPA1A","CNTNAP2","ROBO2"),
annot.by = c( "cell_type", "ApoE"), order.by = c("ApoE", "cell_type"), heatmap.colors =colorRampPalette(c("gold3", "white", "blue"))(100), complex=TRUE, treeheight_row=30,  annotation_colors = annoc)
grub2 <- subset(grub, subset= ApoE != "44")
grub2 <- subset(grub2, subset= cell_type != "End")
dittoHeatmap(grub2, c("LINGO1","DOCK4","LINC00486","CRYAB","NEAT1","FRMD4A","DPP10","HSPA1A","CNTNAP2","ROBO2"),
annot.by = c( "cell_type", "ApoE"), order.by = c("ApoE", "cell_type"), heatmap.colors =colorRampPalette(c("gold3", "white", "blue"))(100), complex=TRUE, treeheight_row=30,  annot.colors = annoc)
grub2 <- subset(grub, subset= ApoE != "44")
grub2 <- subset(grub2, subset= cell_type != "End")
annot_colors <-setNames(c("#AD7700", "#1C91D4",  "#E69F00"), c("33", "34", "Ast"))
#list(APOE = c("3/3"= "#AD7700", "3/4" = "#1C91D4"), Celltype=( c("Ast" = "#E69F00", "Neu"= "aquamarine2", "Mic" = "#0072B2", "Oli"="#D55E00","Opc" ="#CC79A7" )))
dittoHeatmap(grub2, c("LINGO1","DOCK4","LINC00486","CRYAB","NEAT1","FRMD4A","DPP10","HSPA1A","CNTNAP2","ROBO2"),
annot.by = c( "cell_type", "ApoE"), order.by = c("ApoE", "cell_type"), heatmap.colors =colorRampPalette(c("gold3", "white", "blue"))(100), complex=TRUE, treeheight_row=30,  annot.colors = annot_colors)
grub2 <- subset(grub, subset= ApoE != "44")
grub2 <- subset(grub2, subset= cell_type != "End")
annot_colors <-setNames(c("#AD7700", "#1C91D4",  "#E69F00"), c("3/3", "3/4", "Ast"))
#list(APOE = c("3/3"= "#AD7700", "3/4" = "#1C91D4"), Celltype=( c("Ast" = "#E69F00", "Neu"= "aquamarine2", "Mic" = "#0072B2", "Oli"="#D55E00","Opc" ="#CC79A7" )))
dittoHeatmap(grub2, c("LINGO1","DOCK4","LINC00486","CRYAB","NEAT1","FRMD4A","DPP10","HSPA1A","CNTNAP2","ROBO2"),
annot.by = c( "cell_type", "ApoE"), order.by = c("ApoE", "cell_type"), heatmap.colors =colorRampPalette(c("gold3", "white", "blue"))(100), complex=TRUE, treeheight_row=30,  annot.colors = annot_colors)
grub2 <- subset(grub, subset= ApoE != "44")
grub2 <- subset(grub2, subset= cell_type != "End")
annot_colors <-setNames(c("#AD7700", "#1C91D4",  "#E69F00"), c("3/3", "3/4", "Ast"))
#list(APOE = c("3/3"= "#AD7700", "3/4" = "#1C91D4"), Celltype=( c("Ast" = "#E69F00", "Neu"= "aquamarine2", "Mic" = "#0072B2", "Oli"="#D55E00","Opc" ="#CC79A7" )))
dittoHeatmap(grub2, c("LINGO1","DOCK4","LINC00486","CRYAB","NEAT1","FRMD4A","DPP10","HSPA1A","CNTNAP2","ROBO2"),
annot.by = c( "cell_type", "ApoE"), order.by = c("ApoE", "cell_type"), heatmap.colors =colorRampPalette(c("gold3", "white", "blue"))(100), complex=TRUE, treeheight_row=30,  annotation_colors = list(APOE = c("3/3"= "#AD7700", "3/4" = "#1C91D4"), Celltype=( c("Ast" = "#E69F00", "Neu"= "aquamarine2", "Mic" = "#0072B2", "Oli"="#D55E00","Opc" ="#CC79A7" ))))
dittoHeatmap(grub2, c("LINGO1","DOCK4","LINC00486","CRYAB","NEAT1","FRMD4A","DPP10","HSPA1A","CNTNAP2","ROBO2"),
annot.by = c( "cell_type", "ApoE"), order.by = c("ApoE", "cell_type"), heatmap.colors =colorRampPalette(c("gold3", "white", "blue"))(100), complex=TRUE, treeheight_row=30,  annotation_colors = list(ApoE = c("3/3"= "#AD7700", "3/4" = "#1C91D4"), cell_type=( c("Ast" = "#E69F00", "Neu"= "aquamarine2", "Mic" = "#0072B2", "Oli"="#D55E00","Opc" ="#CC79A7" ))))
grub2 <- subset(grub, subset= ApoE != "44")
grub2 <- subset(grub2, subset= cell_type != "End")
dittoHeatmap(grub2, c("LINGO1","DOCK4","LINC00486","CRYAB","NEAT1","FRMD4A","DPP10","HSPA1A","CNTNAP2","ROBO2"),
annot.by = c( "cell_type", "ApoE"), order.by = c("ApoE", "cell_type"), heatmap.colors =colorRampPalette(c("gold3", "white", "blue"))(100), complex=TRUE, treeheight_row=30,  annotation_colors = list(ApoE = c("3/3"= "#AD7700", "3/4" = "#1C91D4"), cell_type=( c("Ast" = "#E69F00", "Neu"= "aquamarine2", "Mic" = "#0072B2", "Oli"="#D55E00","Opc" ="#CC79A7" ))))
